:orphan:
.. _checkbox:

======================================
CheckboxElement
======================================

How to write by SpWML
========================

.. code-block:: none
   
   (checkbox)
   +(menu)menu 1
   +(menu)menu 2
   +(menu)menu 3
   // primary color, icon right.
   (checkbox, isV3:true, isPrefixIcon:false, w:100)
   +(menu)aaa
   +(menu)bbb
   +(menu)ccc

----

Summary
===============

This block allows you to create checkboxes.

----

Functions (Dart)
===================

Child block control
-----------------------

:ref:`Parent class <multi_child>` functions.

Setting the state management manager
---------------------------------------

Set the state management class.

.. code-block:: none
   
   void setManager(MultiFlagManager m)


Initial value setting
-----------------------

Set the initial value. To keep the value on screen refresh, use
Hold the value in a higher widget, etc., and call it.
Invalid if the manager class is not set.

.. code-block:: none
   
   void setValue(List<bool> v)

Callback setting
-------------------

The values of each of the retained checkboxes are collectively passed as a list.

.. code-block:: none
   
   void setCallback(void Function(List<bool>? checkValues)? callback)

----

Variable（Dart）
=================

* :ref:`The common<spwml>` variable.
* :ref:`Parent<multi_child>` variable.
* [elParams] : Not only `Checkbox class <https://api.flutter.dev/flutter/material/Checkbox-class.html>`__ variables that has variables that have been further adjusted to improve usability.

----

Parameters
====================

* :ref:`The common<spwml>` parameters.
* :ref:`Parent<multi_child>` parameters.
* iconSize (double). Set size of icon in px.
* iconColor (String). Color setting. :ref:`The color system<color_system>` .
* splashRadius (double). Set the size of the reaction circle by px on when tapped.
* enableTapLabel (bool). If true, can tap text. The initial value is false.
* isV3 (bool). If true, the checkbox color will be the system primary color. Also, the icon changes to a solid type.
* isPrefixIcon (bool). Default is true, if false the icon is aligned to the right. Note that you may need to specify the width as well, as the text portion will autostretch.

----

Super Class
==============

:ref:`multi_child`